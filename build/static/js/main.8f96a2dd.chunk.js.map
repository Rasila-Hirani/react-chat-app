{"version":3,"sources":["socket.js","components/UserList.js","components/Message.js","components/Chat.js","components/Join.js","App.js","actions/messageAction.js","router/AppRouter.js","reducers/messageReducer.js","reducers/userReducer.js","store/configureStore.js","index.js"],"names":["socket","io","UserList","username","className","moment","locale","format","Message","text","createdAt","id","userID","connect","state","users","messages","props","useState","setusers","setMessages","setText","showEmoji","setShowEmoji","closeMenu","e","useEffect","room","length","map","user","key","type","onClick","onClickSignOut","aria-hidden","allowOuterScroll","heightRelativeToParent","keepAtBottom","msg","index","onSelect","emoji","native","title","apple","theme","include","onSubmit","preventDefault","onSendMessage","target","sendmsg","focus","value","name","placeholder","autoComplete","autoFocus","onChange","Join","error","setError","user_input","room_input","select_room","onNameChange","onRoomChange","roomlist","setName","setroom","loginUI","setLoginUI","roomList","setroomList","on","message","dispatch","addMessage","roomUser","close","emit","console","log","undefined","cb","window","location","href","AppRouter","path","exact","component","App","messageReducerState","action","userReducerState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","messageReducer","userReducer","applyMiddleware","thunk","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f96a2dd.chunk.js","sourcesContent":["// import socketIOClient from \"socket.io-client\";\r\n// //const PORT = 3000;\r\n// const ENDPONT='http://localhost:3000'\r\n// const socket = socketIOClient(ENDPONT);\r\n// export default socket;\r\n\r\n\r\nimport io from 'socket.io-client';\r\n//const url=/192.168.0.84\r\nconst socket = io('/');\r\nexport default socket;\r\n","import React from 'react';\r\n\r\nexport const UserList=({username})=>(\r\n<div className=\"room-member\">{username}</div>\r\n);\r\nexport default UserList;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nmoment.locale(); \r\nmoment().format('LT');\r\n\r\n\r\nexport const Message=({username,text,createdAt,id,userID})=>{ \r\n    return(\r\n        <div className=\"content\">\r\n         <div className={(id === userID) ?'send':'receive'}>\r\n         <span className=\"time\">{`${username} ${moment(createdAt).format('h:mm: A')}`}</span>\r\n        <span className=\"message\"><span className=\"highlight\">{text}</span></span>\r\n        </div>\r\n     </div> \r\n   \r\n    )\r\n};\r\n\r\nexport default Message;","import React,{useState,useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserList from './UserList';\r\nimport Message from './Message';\r\n\r\nimport CustomScroll from 'react-custom-scroll';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart'\r\nconst Chat =(props)=>{   \r\n\r\n    const userID=props.userID;\r\n    const [users,setusers]=useState([]);\r\n    const [messages,setMessages]=useState([]);\r\n    const[text,setText]=useState('');\r\n    const [showEmoji, setShowEmoji]=useState(false);\r\n\r\n      \r\n        const onSubmitMessage=(e)=>{           \r\n            e.preventDefault(); \r\n            props.onSendMessage(text); \r\n           setText('');          \r\n          e.target.sendmsg.focus()\r\n        }\r\n        const addEmoji=(e)=>{\r\n            let emoji = e.native;\r\n            setText(\r\n                text + emoji\r\n            )            \r\n            closeMenu()\r\n        }\r\n        const showEmojis=(e)=>{\r\n            setShowEmoji(true)\r\n        }\r\n        const closeMenu =(e)=>{\r\n            setShowEmoji(false)\r\n        }\r\n       \r\n        useEffect(()=>{\r\n            setusers(props.users);\r\n            setMessages(props.messages);\r\n            \r\n        },[props.users,props.messages])\r\n      return(\r\n        <div className=\"main\">\r\n            <div className=\"userContainer\">\r\n                <div className=\"header\">{`Room name : ${props.room}`}</div>           \r\n            <div className=\"userList\">                      \r\n               {\r\n                   (users.length !== 0)?(\r\n                    users.map((user)=>{                  \r\n                        return <UserList key={user.id} username={user.username} />\r\n                       })\r\n                   ):''\r\n               }\r\n            </div>\r\n            </div>\r\n            <div className=\"chat_main\">\r\n                <div className=\"header\">\r\n                    <span>{`User name : ${props.username}`}</span>\r\n                    <div className=\"btn_signOut\">\r\n                    <button className=\"chat-btn btn-light \" type=\"button\" id=\"sign_out_btn\" onClick={props.onClickSignOut}>\r\n                       <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                       <span className=\"tooltiptext btn_signout_tooltip\">Sign Out</span>\r\n                       </button>\r\n                    </div>\r\n                   \r\n                </div>\r\n            <div className=\"content\">\r\n               <div className=\"chat_box\">\r\n               <CustomScroll   allowOuterScroll={true} heightRelativeToParent=\"calc(100% - 20px)\" keepAtBottom={true}>               \r\n                    {\r\n                        (messages.length !==0)?(                            \r\n                            messages.map((msg,index)=>{         \r\n                                return <Message key={index} {...msg} userID={userID} />     \r\n                            })\r\n                        ):''\r\n                    }\r\n                </CustomScroll>\r\n                \r\n            </div>\r\n            </div>\r\n            <div className=\"chat_footer\">\r\n            {\r\n               showEmoji?(\r\n                   <span className=\"emojiPicker\">\r\n                        <Picker \r\n                            onSelect={addEmoji}  \r\n                            emoji=\"\" \r\n                            title=\"\" \r\n                            apple={true}  \r\n                            theme=\"light\"  \r\n                            include={[\"smileys\",\"people\"]}/>\r\n                    </span>\r\n                         ):\"\"\r\n                }\r\n               <div className=\"emoji_div\">\r\n                   <button className=\"chat-btn btn-light\" onClick={showEmojis} id=\"emoji_button\">\r\n                        <i className=\"fa fa fa-smile-o\" aria-hidden=\"true\"></i>\r\n                        <span className=\"tooltiptext footer_tooltip\">Emoji</span>\r\n                    </button>\r\n                    </div>   \r\n                   \r\n                <form onSubmit={onSubmitMessage} className=\"msg_form\">       \r\n                \r\n                        <input type=\"text\" \r\n                        value={text}\r\n                        name=\"sendmsg\"\r\n                        className=\"write_msg_input\" \r\n                        placeholder=\"Type something...\" \r\n                        autoComplete=\"off\"\r\n                        autoFocus={true}\r\n                        onChange={(e)=>{setText(e.target.value);}}/>\r\n                   \r\n                        \r\n                             <button className=\"chat-btn btn-light\" type=\"button\"> \r\n                             <i className=\"fa fa-paperclip fa-flip-horizontal\" aria-hidden=\"true\"></i>\r\n                             <span className=\"tooltiptext footer_tooltip\">Add files</span>\r\n                             </button>\r\n                             <button className=\"chat-btn msg_send_btn\" type=\"submit\">\r\n                                 <i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                    \r\n                </form>\r\n               \r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    users:state.users,\r\n    messages:state.messages\r\n})\r\nexport default connect(mapStateToProps)(Chat);","import React,{useState} from 'react';\r\n\r\n\r\nconst Join =(props)=>{\r\n  \r\n    const [error,setError]=useState('');\r\n\r\nconst joinRoom=(e)=>{\r\n    e.preventDefault(); \r\n    const user_input=e.target.user_input;\r\n    const room_input=e.target.room_input;\r\n    const select_room=e.target.select_room;\r\n    \r\n    if(user_input.value === '')\r\n        setError('Please enter username or room name!')\r\n    else if(room_input.value === '' && select_room.value ===\"select\")\r\n        setError('Please Create room or Select room')\r\n    else{\r\n        setError('');\r\n        props.onSubmit();\r\n    }\r\n\r\n\r\n   \r\n}\r\n    return(\r\n            <div className=\"page\">\r\n            <div className=\"signup\">\r\n                <div className=\"signup-classic\">\r\n                <h3>Login</h3>\r\n    {error !==''?<p>{error}</p>:''}\r\n                    <form className=\"form\" onSubmit={joinRoom}>\r\n                        <input type=\"text\" placeholder=\"username\" onChange={props.onNameChange} className=\"input_txt\"  id=\"user_input\" />      \r\n                    <input type=\"text\" placeholder=\"Room\" onChange={props.onRoomChange} className=\"input_txt\"  id=\"room_input\"/>\r\n                   \r\n                    <select id=\"roomList\" onChange={props.onRoomChange} className=\"input_txt\" id=\"select_room\">\r\n                    <option value=\"select\">Select one or Create Room</option>\r\n                        {\r\n                            props.roomlist.length >0 ?(\r\n                                props.roomlist.map((value)=>{\r\n                                    return <option value={value} key={value}>{value}</option>\r\n                                })\r\n                                \r\n                            ):\"\" \r\n                        }\r\n                       \r\n                    </select>\r\n                    <button type=\"submit\" className=\"btn\">Join</button>\r\n                    </form>\r\n                    <h2>By logging in you agree to the ridiculously long terms that you didn't bother to read.</h2>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Join;","import React,{useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {startAddMessage,setUsers} from './actions/messageAction';\n\nimport socket from './socket';\nimport Chat from './components/Chat';\nimport Join from './components/Join'\n\nconst App =(props)=>{\n    \n    const [username,setName]=useState('');\n    const [room,setroom]=useState('');  \n    const [loginUI,setLoginUI]=useState(true);\n    const [roomList,setroomList]=useState([]);\n  \n   const onNameChange=(e)=>{\n        setName(e.target.value);\n    }\n    const onRoomChange=(e)=>{\n        setroom(e.target.value);\n    }\n    const onSubmit=(e)=>{\n     \n        \n        socket.emit('join',{username,room},(error) =>{   \n                \n            if(error){\n                console.log(error);\n            }else{    \n                               \n                setLoginUI(undefined);               \n            }\n        });\n    }\n    const onSendMessage=(msg)=>{\n        socket.emit('sendMessage',msg,(cb)=>{                        \n          })\n    }\n    const onClickSignOut =()=>{          \n        socket.close();       \n       window.location.href=\"/\"\n\n    }\n   useEffect(()=>{\n    socket.on('message',(msg)=>{              \n        props.dispatch(startAddMessage(msg))\n     })\n    \n     socket.on('roomList',(roomlist) =>{\n         setroomList(roomlist)\n     })\n     socket.on('userInRoom',(roomUser)=>{  \n        props.dispatch(setUsers(roomUser.users));\n     })\n     return ()=>{\n       socket.close();        \n     }\n   },[props.users,props.messages])\n\n    return(\n        <div>\n            {loginUI?(\n               <Join onSubmit={onSubmit} \n                    onNameChange={onNameChange} \n                    onRoomChange={onRoomChange}\n                    roomlist={roomList}>                        \n                </Join>\n                // <Chat \n                // userID={socket.id} \n                // username={username} \n                // room={room} \n                // onSendMessage={onSendMessage} \n                // onClickSignOut={onClickSignOut}/>   \n                 \n            ):(\n                <Chat \n                    userID={socket.id} \n                    username={username} \n                    room={room} \n                    onSendMessage={onSendMessage} \n                    onClickSignOut={onClickSignOut}/>       \n                // <Join onSubmit={onSubmit} \n                //     onNameChange={onNameChange} \n                //     onRoomChange={onRoomChange}>                        \n                // </Join>      \n            )\n            }\n                       \n        </div>\n    );\n}\n\n\nexport default connect()(App);\n//export default Join;","export const addMessage = (message) => ({\r\n    type:'ADD_MESSAGE',\r\n    message\r\n  })\r\nexport const startAddMessage=(message)=>{   \r\n    return(dispatch)=>{         \r\n      dispatch(addMessage({...message}));\r\n     }\r\n  }\r\n  export const messageReceived = (id,message, author) => ({\r\n    type:'MESSAGE_RECEIVED',\r\n    id,\r\n    message,\r\n    author\r\n  })\r\n  \r\n  export const addUser = (user) => ({\r\n    type: 'ADD_USER',\r\n    user \r\n  })\r\n  export const startAddUser =(id={},username={},room={})=>{  \r\n    console.log('in message action :',id)\r\n    const user={id,username,room}   \r\n    return(dispatch)=>{\r\n     dispatch(addUser({...user}));\r\n    }\r\n  }\r\n \r\n  \r\n\r\n  export const setUsers = (users) => ({\r\n    type: 'USERS_LIST',\r\n    users\r\n  })\r\n\r\n  // export const populateUsersList = (users) => {\r\n  //   return (dispatch)=>{\r\n  //     return dispatch(setUsers(users))\r\n  //   }\r\n  // }\r\n  ","import React from 'react';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\r\nimport App from '../App';\r\n\r\nconst AppRouter =()=>(  \r\n    <Router >\r\n   <div>\r\n       \r\n           <Route path=\"/\" exact={true} component={App}/>\r\n          \r\n   </div> \r\n   </Router>\r\n);\r\nexport default AppRouter;","const messageReducerState=[];\r\nconst messages = (state = messageReducerState, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_MESSAGE': \r\n          return [\r\n            ...state,\r\n            action.message\r\n          ]\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default messages;","//import * as types from '../actions/Actiontypes';\r\n\r\n// const users = (state = [], action) => {\r\n//     switch (action.type) {\r\n//       case ADD_USER:\r\n//         return {\r\n//             state.concat([{ name: action.name, id: action.id }]),\r\n//             console.log(state),\r\n//             console.log(action)\r\n//         }\r\n//       case types.USERS_LIST:\r\n//         return action.users\r\n//       default:\r\n//         return state\r\n//     }\r\n//   }users:state.concat([{ name: action.name, id: action.id }])\r\n\r\nconst userReducerState = [];\r\nexport default(state=userReducerState,action)=>{\r\n    switch(action.type){     \r\n        case 'ADD_USER':\r\n            return[\r\n                ...state,\r\n                action.user\r\n            ]          \r\n        case 'USERS_LIST':\r\n            return action.users\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {createStore,applyMiddleware,combineReducers,compose}  from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport messageReducer from '../reducers/messageReducer';\r\nimport userReducer from '../reducers/userReducer';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport default () =>{\r\n    const store =createStore(\r\n        combineReducers({\r\n                messages:messageReducer,\r\n                users:userReducer\r\n            }),\r\n            composeEnhancers(applyMiddleware(thunk))\r\n    );\r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport AppRouter from './router/AppRouter';\nimport configureStore from './store/configureStore';\nimport './styles/styles.scss';\n\n\nconst store =configureStore();\nconst jsx =(\n    <Provider store={store}>\n        <AppRouter/>\n    </Provider>\n);\nReactDOM.render(jsx,document.getElementById('root'));\n    \n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}